type Query {
    #Students queries
    findStudentById(studentId: String) : Student,
    findAllStudents : [Student]

    #Courses queries
    findCourseById(courseId: String) :Course,
    findAllCourses : [Course]
}

# Queries de modificacion de datos
type Mutation{
    #Students mutations
    createStudent(inputStudent: InputStudent!): Student,
    deleteStudentById(studentId: String) : String
    #Courses mutations
    createCourse(inputCourse: InputCourse!) :Course
    deleteCourseById(courseId: String) :String

}

# Types
type Student {
    id:ID,
    name: String,
    lastName: String,
    age: Int,
    course: Course
}
type Course {
    id: ID,
    name: String,
    category: String,
    teacher: String
}

#Datos tipo de entrada
input InputStudent{
    name: String,
    lastName: String,
    age: Int,
    courseId: String!
}
input InputCourse{
    name: String,
    category: String,
    teacher: String
}
